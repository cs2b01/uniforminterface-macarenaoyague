$date
	Wed May  6 16:57:45 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module mux8_1_tb $end
$var wire 16 ! output1 [15:0] $end
$var reg 16 " input1 [15:0] $end
$var reg 16 # input2 [15:0] $end
$var reg 16 $ input3 [15:0] $end
$var reg 16 % input4 [15:0] $end
$var reg 16 & input5 [15:0] $end
$var reg 16 ' input6 [15:0] $end
$var reg 16 ( input7 [15:0] $end
$var reg 16 ) input8 [15:0] $end
$var reg 3 * selector [2:0] $end
$scope module mux $end
$var wire 16 + input1 [15:0] $end
$var wire 16 , input2 [15:0] $end
$var wire 16 - input3 [15:0] $end
$var wire 16 . input4 [15:0] $end
$var wire 16 / input5 [15:0] $end
$var wire 16 0 input6 [15:0] $end
$var wire 16 1 input7 [15:0] $end
$var wire 16 2 input8 [15:0] $end
$var wire 3 3 selector [2:0] $end
$var wire 16 4 submodule2 [15:0] $end
$var wire 16 5 submodule1 [15:0] $end
$var wire 16 6 output1 [15:0] $end
$scope module mux1 $end
$var wire 16 7 input1 [15:0] $end
$var wire 16 8 input2 [15:0] $end
$var wire 16 9 input3 [15:0] $end
$var wire 16 : input4 [15:0] $end
$var wire 2 ; selector [1:0] $end
$var wire 16 < submodule2 [15:0] $end
$var wire 16 = submodule1 [15:0] $end
$var wire 16 > output1 [15:0] $end
$scope module mux1 $end
$var wire 16 ? input1 [15:0] $end
$var wire 16 @ input2 [15:0] $end
$var wire 1 A selector $end
$var wire 16 B output1 [15:0] $end
$upscope $end
$scope module mux2 $end
$var wire 16 C input1 [15:0] $end
$var wire 16 D input2 [15:0] $end
$var wire 1 E selector $end
$var wire 16 F output1 [15:0] $end
$upscope $end
$upscope $end
$scope module mux2 $end
$var wire 16 G input1 [15:0] $end
$var wire 16 H input2 [15:0] $end
$var wire 16 I input3 [15:0] $end
$var wire 16 J input4 [15:0] $end
$var wire 2 K selector [1:0] $end
$var wire 16 L submodule2 [15:0] $end
$var wire 16 M submodule1 [15:0] $end
$var wire 16 N output1 [15:0] $end
$scope module mux1 $end
$var wire 16 O input1 [15:0] $end
$var wire 16 P input2 [15:0] $end
$var wire 1 Q selector $end
$var wire 16 R output1 [15:0] $end
$upscope $end
$scope module mux2 $end
$var wire 16 S input1 [15:0] $end
$var wire 16 T input2 [15:0] $end
$var wire 1 U selector $end
$var wire 16 V output1 [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1000010001100101 V
0U
b101001000010010 T
b1000010001100101 S
b111101100001101 R
0Q
b1001100110001101 P
b111101100001101 O
b111101100001101 N
b111101100001101 M
b1000010001100101 L
b0 K
b101001000010010 J
b1000010001100101 I
b1001100110001101 H
b111101100001101 G
b1101011000001001 F
0E
b101011001100011 D
b1101011000001001 C
b11010100100100 B
0A
b101111010000001 @
b11010100100100 ?
b11010100100100 >
b11010100100100 =
b1101011000001001 <
b0 ;
b101011001100011 :
b1101011000001001 9
b101111010000001 8
b11010100100100 7
b11010100100100 6
b11010100100100 5
b111101100001101 4
b0 3
b101001000010010 2
b1000010001100101 1
b1001100110001101 0
b111101100001101 /
b101011001100011 .
b1101011000001001 -
b101111010000001 ,
b11010100100100 +
b0 *
b101001000010010 )
b1000010001100101 (
b1001100110001101 '
b111101100001101 &
b101011001100011 %
b1101011000001001 $
b101111010000001 #
b11010100100100 "
b11010100100100 !
$end
#1
b101111010000001 !
b101111010000001 6
b101111010000001 5
b101111010000001 >
b1001100110001101 4
b1001100110001101 N
b101111010000001 =
b101111010000001 B
b101011001100011 <
b101011001100011 F
b1001100110001101 M
b1001100110001101 R
b101001000010010 L
b101001000010010 V
1A
1E
1Q
1U
b1 ;
b1 K
b1 *
b1 3
#2
b1101011000001001 !
b1101011000001001 6
b11010100100100 =
b11010100100100 B
b1101011000001001 <
b1101011000001001 F
b1101011000001001 5
b1101011000001001 >
b111101100001101 M
b111101100001101 R
b1000010001100101 L
b1000010001100101 V
b1000010001100101 4
b1000010001100101 N
0A
0E
0Q
0U
b10 ;
b10 K
b10 *
b10 3
#3
b101011001100011 !
b101011001100011 6
b101011001100011 5
b101011001100011 >
b101001000010010 4
b101001000010010 N
b101111010000001 =
b101111010000001 B
b101011001100011 <
b101011001100011 F
b1001100110001101 M
b1001100110001101 R
b101001000010010 L
b101001000010010 V
1A
1E
1Q
1U
b11 ;
b11 K
b11 *
b11 3
#4
b11010100100100 =
b11010100100100 B
b1101011000001001 <
b1101011000001001 F
b11010100100100 5
b11010100100100 >
b111101100001101 M
b111101100001101 R
b1000010001100101 L
b1000010001100101 V
b111101100001101 4
b111101100001101 N
0A
0E
0Q
0U
b111101100001101 !
b111101100001101 6
b0 ;
b0 K
b100 *
b100 3
#5
b1001100110001101 !
b1001100110001101 6
b101111010000001 5
b101111010000001 >
b1001100110001101 4
b1001100110001101 N
b101111010000001 =
b101111010000001 B
b101011001100011 <
b101011001100011 F
b1001100110001101 M
b1001100110001101 R
b101001000010010 L
b101001000010010 V
1A
1E
1Q
1U
b1 ;
b1 K
b101 *
b101 3
#6
b1000010001100101 !
b1000010001100101 6
b11010100100100 =
b11010100100100 B
b1101011000001001 <
b1101011000001001 F
b1101011000001001 5
b1101011000001001 >
b111101100001101 M
b111101100001101 R
b1000010001100101 L
b1000010001100101 V
b1000010001100101 4
b1000010001100101 N
0A
0E
0Q
0U
b10 ;
b10 K
b110 *
b110 3
#7
b101001000010010 !
b101001000010010 6
b101011001100011 5
b101011001100011 >
b101001000010010 4
b101001000010010 N
b101111010000001 =
b101111010000001 B
b101011001100011 <
b101011001100011 F
b1001100110001101 M
b1001100110001101 R
b101001000010010 L
b101001000010010 V
1A
1E
1Q
1U
b11 ;
b11 K
b111 *
b111 3
#8
b11010100100100 =
b11010100100100 B
b1101011000001001 <
b1101011000001001 F
b11010100100100 5
b11010100100100 >
b111101100001101 M
b111101100001101 R
b1000010001100101 L
b1000010001100101 V
b111101100001101 4
b111101100001101 N
0A
0E
0Q
0U
b11010100100100 !
b11010100100100 6
b0 ;
b0 K
b0 *
b0 3
