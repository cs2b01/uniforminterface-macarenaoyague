$date
	Sun Jun 14 19:15:07 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module alu_tb $end
$var wire 1 ! zero $end
$var wire 32 " result [31:0] $end
$var reg 32 # A [31:0] $end
$var reg 32 $ B [31:0] $end
$var reg 4 % opcode [3:0] $end
$scope module inst1 $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 4 ( opcode [3:0] $end
$var wire 1 ! zero $end
$var wire 32 ) result [31:0] $end
$var wire 32 * outLogic [31:0] $end
$var wire 32 + outArithmetic [31:0] $end
$scope module ari $end
$var wire 32 , A [31:0] $end
$var wire 32 - B [31:0] $end
$var wire 4 . opcode [3:0] $end
$var reg 32 / out [31:0] $end
$upscope $end
$scope module log $end
$var wire 32 0 A [31:0] $end
$var wire 32 1 B [31:0] $end
$var wire 4 2 opcode [3:0] $end
$var reg 32 3 out [31:0] $end
$upscope $end
$scope module mux $end
$var wire 32 4 arithU [31:0] $end
$var wire 32 5 logicU [31:0] $end
$var wire 1 6 sel $end
$var wire 32 7 out [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0x10xx 7
x6
b1010 5
b11001 4
b1010 3
bx 2
b1010 1
b1111 0
b11001 /
bx .
b1010 -
b1111 ,
b11001 +
b1010 *
b0x10xx )
bx (
b1010 '
b1111 &
bx %
b1010 $
b1111 #
b0x10xx "
0!
$end
#1
b11001 "
b11001 )
b11001 7
06
b0 *
b0 3
b0 5
b0 %
b0 (
b0 .
b0 2
#2
b101 "
b101 )
b101 7
b101 +
b101 /
b101 4
b10 %
b10 (
b10 .
b10 2
#3
b1010 "
b1010 )
b1010 7
16
b1010 *
b1010 3
b1010 5
b0 +
b0 /
b0 4
b100 %
b100 (
b100 .
b100 2
#4
b1111 "
b1111 )
b1111 7
b1111 *
b1111 3
b1111 5
b101 %
b101 (
b101 .
b101 2
#5
b101 "
b101 )
b101 7
b101 *
b101 3
b101 5
b110 %
b110 (
b110 .
b110 2
#6
b11111111111111111111111111110000 "
b11111111111111111111111111110000 )
b11111111111111111111111111110000 7
b11111111111111111111111111110000 *
b11111111111111111111111111110000 3
b11111111111111111111111111110000 5
b111 %
b111 (
b111 .
b111 2
#7
1!
b0 "
b0 )
b0 7
06
b0 *
b0 3
b0 5
b1010 %
b1010 (
b1010 .
b1010 2
#8
0!
b0x10xx "
b0x10xx )
b0x10xx 7
x6
b11001 +
b11001 /
b11001 4
b1010 *
b1010 3
b1010 5
bx %
bx (
bx .
bx 2
#16
